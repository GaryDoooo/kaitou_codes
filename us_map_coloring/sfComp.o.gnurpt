/usr/include/c++/9/bits/basic_ios.h:158:9: note: Considering inline candidate constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/618.
/usr/include/c++/9/bits/basic_ios.h:158:9: optimized:  Inlining constexpr std::_Ios_Iostate std::operator|(std::_Ios_Iostate, std::_Ios_Iostate)/618 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/3332.
/usr/include/c++/9/bits/basic_ios.h:158:9: note: Considering inline candidate std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/4929.
/usr/include/c++/9/bits/basic_ios.h:158:9: optimized:  Inlining std::ios_base::iostate std::basic_ios<_CharT, _Traits>::rdstate() const [with _CharT = char; _Traits = std::char_traits<char>]/4929 into void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/3332.
/usr/include/c++/9/ostream:571:44: note: Considering inline candidate static std::size_t std::char_traits<char>::length(const char_type*)/337.
/usr/include/c++/9/ostream:571:44: optimized:  Inlining static std::size_t std::char_traits<char>::length(const char_type*)/337 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061.
/usr/include/c++/9/ostream:568:2: note: Considering inline candidate void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/3332.
/usr/include/c++/9/ostream:568:2: optimized:  Inlining void std::basic_ios<_CharT, _Traits>::setstate(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/3332 into std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061.
us_map.cpp:15:25: optimized:   Inlining int getchar()/182 into int read()/2497 (always_inline).
us_map.cpp:11:25: optimized:   Inlining int getchar()/182 into int read()/2497 (always_inline).
us_map.cpp:8:26: optimized:   Inlining int getchar()/182 into int read()/2497 (always_inline).
/usr/include/c++/9/bits/allocator.h:138:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3325.
/usr/include/c++/9/bits/allocator.h:138:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3325 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3053.
/usr/include/c++/9/bits/hashtable_policy.h:1096:7: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3053.
/usr/include/c++/9/bits/hashtable_policy.h:1096:7: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3053 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/2508.
/usr/include/c++/9/bits/hashtable_policy.h:2036:7: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/2508.
/usr/include/c++/9/bits/hashtable_policy.h:2036:7: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper() [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/2508 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/2514.
/usr/include/c++/9/bits/hashtable.h:414:7: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/2424.
/usr/include/c++/9/bits/hashtable.h:414:7: optimized:  Inlining std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/2424 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/2520.
/usr/include/c++/9/bits/hashtable.h:414:7: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/2417.
/usr/include/c++/9/bits/hashtable.h:414:7: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/2417 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/2520.
/usr/include/c++/9/bits/hashtable.h:414:7: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/2514.
/usr/include/c++/9/bits/hashtable.h:414:7: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/2514 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/2520.
/usr/include/c++/9/bits/unordered_set.h:135:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/2520.
/usr/include/c++/9/bits/unordered_set.h:135:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/2520 into std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/2523.
us_map.cpp:21:12: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/2523.
us_map.cpp:21:12: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/2523 into void __static_initialization_and_destruction_0(int, int)/4125.
/usr/include/c++/9/bits/allocator.h:153:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3328.
/usr/include/c++/9/bits/allocator.h:153:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3328 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3056.
/usr/include/c++/9/bits/hashtable_policy.h:1093:12: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3056.
/usr/include/c++/9/bits/hashtable_policy.h:1093:12: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3056 into std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper()/2511.
/usr/include/c++/9/bits/hashtable_policy.h:2017:12: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper()/2511.
/usr/include/c++/9/bits/hashtable_policy.h:2017:12: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper()/2511 into std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc()/2517.
/usr/include/c++/9/bits/allocator.h:138:36: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int]/3336.
/usr/include/c++/9/bits/allocator.h:138:36: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = int]/3336 into std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int]/3065.
/usr/include/c++/9/bits/allocator.h:153:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int]/3339.
/usr/include/c++/9/bits/allocator.h:153:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = int]/3339 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/3068.
/usr/include/c++/9/initializer_list:79:45: note: Considering inline candidate constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = int]/4946.
/usr/include/c++/9/initializer_list:79:45: optimized:  Inlining constexpr std::initializer_list<_E>::size_type std::initializer_list<_E>::size() const [with _E = int]/4946 into constexpr const _E* std::initializer_list<_E>::end() const [with _E = int]/3343.
/usr/include/c++/9/initializer_list:79:45: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::begin() const [with _E = int]/4945.
/usr/include/c++/9/initializer_list:79:45: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::begin() const [with _E = int]/4945 into constexpr const _E* std::initializer_list<_E>::end() const [with _E = int]/3343.
/usr/include/c++/9/bits/unordered_set.h:304:26: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4948.
/usr/include/c++/9/bits/unordered_set.h:304:26: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4948 into std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size() const [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3084.
/usr/include/c++/9/bits/basic_ios.h:450:49: note: Considering inline candidate std::ctype<char>::char_type std::ctype<char>::widen(char) const/675.
/usr/include/c++/9/bits/basic_ios.h:450:49: optimized:  Inlining std::ctype<char>::char_type std::ctype<char>::widen(char) const/675 into std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/3333.
/usr/include/c++/9/bits/basic_ios.h:450:29: note: Considering inline candidate const _Facet& std::__check_facet(const _Facet*) [with _Facet = std::ctype<char>]/3526.
/usr/include/c++/9/bits/basic_ios.h:450:29: optimized:  Inlining const _Facet& std::__check_facet(const _Facet*) [with _Facet = std::ctype<char>]/3526 into std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/3333.
/usr/include/c++/9/ostream:600:19: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>& std::flush(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3334.
/usr/include/c++/9/ostream:600:19: optimized:  Inlining std::basic_ostream<_CharT, _Traits>& std::flush(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3334 into std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062.
/usr/include/c++/9/ostream:600:19: note: Considering inline candidate std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/3333.
/usr/include/c++/9/ostream:600:19: missed:   will not early inline: std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062->std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/3333, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/9/bits/hashtable_policy.h:299:16: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable_policy.h:299:16: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = int; bool _Cache_hash_code = false]/3349.
/usr/include/c++/9/bits/hashtable_policy.h:354:2: note: Considering inline candidate void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = int; bool _Cache_hash_code = false]/4952.
/usr/include/c++/9/bits/hashtable_policy.h:354:2: optimized:  Inlining void std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_M_incr() [with _Value = int; bool _Cache_hash_code = false]/4952 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076.
/usr/include/c++/9/bits/hashtable_policy.h:341:24: note: Considering inline candidate std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = int; bool _Cache_hash_code = false]/3639.
/usr/include/c++/9/bits/hashtable_policy.h:341:24: optimized:  Inlining std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::_Node_iterator_base(std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>::__node_type*) [with _Value = int; bool _Cache_hash_code = false]/3639 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531.
/usr/include/c++/9/bits/hashtable.h:505:35: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531.
/usr/include/c++/9/bits/hashtable.h:505:35: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3347.
/usr/include/c++/9/bits/hashtable.h:505:35: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4949.
/usr/include/c++/9/bits/hashtable.h:505:35: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4949 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3347.
/usr/include/c++/9/bits/unordered_set.h:320:27: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3347.
/usr/include/c++/9/bits/unordered_set.h:320:27: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::begin() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3347 into std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073.
/usr/include/c++/9/bits/hashtable.h:513:32: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531.
/usr/include/c++/9/bits/hashtable.h:513:32: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::end() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3348.
/usr/include/c++/9/bits/unordered_set.h:334:25: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::end() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4956.
/usr/include/c++/9/bits/unordered_set.h:334:25: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::end() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4956 into std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3074.
/usr/include/c++/9/bits/hashtable_policy.h:85:33: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548.
/usr/include/c++/9/bits/hashtable_policy.h:85:33: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548 into _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const int&]/3647.
/usr/include/c++/9/bits/stl_pair.h:342:59: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/2460.
/usr/include/c++/9/bits/stl_pair.h:342:59: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/2460 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<int, true, false>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3654.
/usr/include/c++/9/bits/stl_pair.h:342:27: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<int, true, false>]/3649.
/usr/include/c++/9/bits/stl_pair.h:342:27: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<int, true, false>]/3649 into constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<int, true, false>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3654.
/usr/include/c++/9/bits/stl_pair.h:529:72: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<int, true, false>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3654.
/usr/include/c++/9/bits/stl_pair.h:529:72: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<int, true, false>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3654 into constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3650.
/usr/include/c++/9/bits/stl_pair.h:529:72: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<int, true, false>]/3649.
/usr/include/c++/9/bits/stl_pair.h:529:72: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::__detail::_Node_iterator<int, true, false>]/3649 into constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3650.
/usr/include/c++/9/bits/stl_pair.h:529:72: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/2460.
/usr/include/c++/9/bits/stl_pair.h:529:72: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = bool]/2460 into constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3650.
/usr/include/c++/9/bits/allocator.h:151:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3325.
/usr/include/c++/9/bits/allocator.h:151:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3325 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = int; _Tp = std::__detail::_Hash_node<int, false>]/3717.
/usr/include/c++/9/ext/aligned_buffer.h:115:16: note: Considering inline candidate void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = int]/3728.
/usr/include/c++/9/ext/aligned_buffer.h:115:16: optimized:  Inlining void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() [with _Tp = int]/3728 into _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = int]/3641.
/usr/include/c++/9/bits/hashtable_policy.h:237:34: note: Considering inline candidate _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = int]/3641.
/usr/include/c++/9/bits/hashtable_policy.h:237:34: optimized:  Inlining _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() [with _Tp = int]/3641 into _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = int]/3534.
/usr/include/c++/9/bits/hashtable_policy.h:245:16: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = int]/3534.
/usr/include/c++/9/bits/hashtable_policy.h:245:16: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = int]/3534 into _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = int]/3350.
/usr/include/c++/9/bits/hashtable_policy.h:345:35: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = int]/3350.
/usr/include/c++/9/bits/hashtable_policy.h:345:35: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = int]/3350 into std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3077.
/usr/include/c++/9/bits/hashtable_policy.h:1326:54: note: Considering inline candidate static _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_get(std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::__detail::_Identity]/3734.
/usr/include/c++/9/bits/hashtable_policy.h:1326:54: optimized:  Inlining static _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_get(std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::__detail::_Identity]/3734 into _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3646.
/usr/include/c++/9/bits/hashtable_policy.h:229:12: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/2417.
/usr/include/c++/9/bits/hashtable_policy.h:229:12: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/2417 into std::__detail::_Hash_node_value_base<int>::_Hash_node_value_base()/3736.
/usr/include/c++/9/bits/hashtable_policy.h:279:12: note: Considering inline candidate std::__detail::_Hash_node_value_base<int>::_Hash_node_value_base()/3736.
/usr/include/c++/9/bits/hashtable_policy.h:279:12: optimized:  Inlining std::__detail::_Hash_node_value_base<int>::_Hash_node_value_base()/3736 into std::__detail::_Hash_node<int, false>::_Hash_node()/3739.
/usr/include/c++/9/bits/hashtable_policy.h:85:33: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = int&]/3743.
/usr/include/c++/9/bits/hashtable_policy.h:85:33: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = int&]/3743 into _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = int&]/3744.
/usr/include/c++/9/bits/hashtable_policy.h:2047:40: note: Considering inline candidate static _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_get(std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3822.
/usr/include/c++/9/bits/hashtable_policy.h:2047:40: optimized:  Inlining static _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_get(std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3822 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705.
/usr/include/c++/9/bits/alloc_traits.h:497:4: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::__detail::_Hash_node<int, false>]/4971.
/usr/include/c++/9/bits/alloc_traits.h:497:4: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::destroy(_Up*) [with _Up = int; _Tp = std::__detail::_Hash_node<int, false>]/4971 into static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::__detail::_Hash_node<int, false>]/3706.
/usr/include/c++/9/bits/move.h:139:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/3826.
/usr/include/c++/9/bits/move.h:139:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/3826 into _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/3827.
/usr/include/c++/9/bits/ptr_traits.h:147:30: note: Considering inline candidate _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/3827.
/usr/include/c++/9/bits/ptr_traits.h:147:30: optimized:  Inlining _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node_base*]/3827 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/3708.
/usr/include/c++/9/bits/allocator.h:151:53: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/3829.
/usr/include/c++/9/bits/allocator.h:151:53: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/3829 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<int, false>; _Tp = std::__detail::_Hash_node_base*]/3710.
/usr/include/c++/9/bits/allocator.h:153:39: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/3832.
/usr/include/c++/9/bits/allocator.h:153:39: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::~new_allocator() [with _Tp = std::__detail::_Hash_node_base*]/3832 into std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/3713.
/usr/include/c++/9/bits/alloc_traits.h:470:9: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/4973.
/usr/include/c++/9/bits/alloc_traits.h:470:9: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node_base*]/4973 into static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/3715.
/usr/include/c++/9/bits/hashtable_policy.h:2147:27: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/3713.
/usr/include/c++/9/bits/hashtable_policy.h:2147:27: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/3713 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base**, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3631.
/usr/include/c++/9/bits/hashtable_policy.h:2148:40: note: Considering inline candidate static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/4974.
/usr/include/c++/9/bits/hashtable_policy.h:2148:40: optimized:  Inlining static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/4974 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base**, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3631.
/usr/include/c++/9/bits/hashtable_policy.h:2147:27: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<int, false>; _Tp = std::__detail::_Hash_node_base*]/3710.
/usr/include/c++/9/bits/hashtable_policy.h:2147:27: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<int, false>; _Tp = std::__detail::_Hash_node_base*]/3710 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base**, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3631.
/usr/include/c++/9/bits/hashtable_policy.h:2147:27: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705.
/usr/include/c++/9/bits/hashtable_policy.h:2147:27: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base**, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3631.
/usr/include/c++/9/bits/hashtable_policy.h:2146:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/3708.
/usr/include/c++/9/bits/hashtable_policy.h:2146:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node_base*]/3708 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base**, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3631.
/usr/include/c++/9/bits/hashtable.h:370:42: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base**, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4978.
/usr/include/c++/9/bits/hashtable.h:370:42: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_buckets(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base**, std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4978 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3524.
/usr/include/c++/9/bits/hashtable.h:367:2: note: Considering inline candidate bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3630.
/usr/include/c++/9/bits/hashtable.h:367:2: optimized:  Inlining bool std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_uses_single_bucket(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3630 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3524.
/usr/include/c++/9/bits/hashtable.h:375:9: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4979.
/usr/include/c++/9/bits/hashtable.h:375:9: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4979 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3331.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::equal_to<int>&]/3838.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::equal_to<int>&]/3838 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::equal_to<int>&; int _Nm = 0; _Tp = std::equal_to<int>]/3840.
/usr/include/c++/9/bits/stl_iterator_base_funcs.h:141:29: note: Considering inline candidate constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const int*]/4980.
/usr/include/c++/9/bits/stl_iterator_base_funcs.h:141:29: optimized:  Inlining constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = const int*]/4980 into typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const int*]/3846.
/usr/include/c++/9/bits/hashtable_policy.h:72:27: note: Considering inline candidate typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const int*]/3846.
/usr/include/c++/9/bits/hashtable_policy.h:72:27: optimized:  Inlining typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = const int*]/3846 into typename std::iterator_traits<_Iterator>::difference_type std::__detail::__distance_fw(_Iterator, _Iterator, std::forward_iterator_tag) [with _Iterator = const int*]/3726.
/usr/include/c++/9/bits/hashtable_policy.h:77:27: note: Considering inline candidate typename std::iterator_traits<_Iterator>::difference_type std::__detail::__distance_fw(_Iterator, _Iterator, std::forward_iterator_tag) [with _Iterator = const int*]/4981.
/usr/include/c++/9/bits/hashtable_policy.h:77:27: optimized:  Inlining typename std::iterator_traits<_Iterator>::difference_type std::__detail::__distance_fw(_Iterator, _Iterator, std::forward_iterator_tag) [with _Iterator = const int*]/4981 into typename std::iterator_traits<_Iterator>::difference_type std::__detail::__distance_fw(_Iterator, _Iterator) [with _Iterator = const int*]/3636.
/usr/include/c++/9/bits/hashtable_policy.h:1329:47: note: Considering inline candidate static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 1; _Tp = std::hash<int>]/3849.
/usr/include/c++/9/bits/hashtable_policy.h:1329:47: optimized:  Inlining static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 1; _Tp = std::hash<int>]/3849 into const _H1& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h1() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3729.
/usr/include/c++/9/bits/hashtable_policy.h:1292:16: note: Considering inline candidate std::size_t std::hash<int>::operator()(int) const/4931.
/usr/include/c++/9/bits/hashtable_policy.h:1292:16: optimized:  Inlining std::size_t std::hash<int>::operator()(int) const/4931 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_hash_code(const _Key&) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3642.
/usr/include/c++/9/bits/hashtable_policy.h:1292:16: note: Considering inline candidate const _H1& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h1() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3729.
/usr/include/c++/9/bits/hashtable_policy.h:1292:16: optimized:  Inlining const _H1& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h1() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3729 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_hash_code(const _Key&) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3642.
/usr/include/c++/9/bits/move.h:139:30: note: Considering inline candidate constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<int, false>]/3910.
/usr/include/c++/9/bits/move.h:139:30: optimized:  Inlining constexpr _Tp* std::__addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<int, false>]/3910 into _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<int, false>]/3911.
/usr/include/c++/9/bits/ptr_traits.h:147:30: note: Considering inline candidate _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<int, false>]/3911.
/usr/include/c++/9/bits/ptr_traits.h:147:30: optimized:  Inlining _Tp* std::addressof(_Tp&) [with _Tp = std::__detail::_Hash_node<int, false>]/3911 into static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<int, false>]/3824.
/usr/include/c++/9/bits/alloc_traits.h:470:9: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/4985.
/usr/include/c++/9/bits/alloc_traits.h:470:9: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::deallocate(__gnu_cxx::new_allocator<_Tp>::pointer, __gnu_cxx::new_allocator<_Tp>::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/4985 into static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/3825.
/usr/include/c++/9/bits/hashtable_policy.h:2113:38: note: Considering inline candidate static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/4986.
/usr/include/c++/9/bits/hashtable_policy.h:2113:38: optimized:  Inlining static void std::allocator_traits<std::allocator<_CharT> >::deallocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::pointer, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/4986 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3707.
/usr/include/c++/9/bits/hashtable_policy.h:2113:38: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705.
/usr/include/c++/9/bits/hashtable_policy.h:2113:38: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3707.
/usr/include/c++/9/bits/hashtable_policy.h:2111:57: note: Considering inline candidate static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<int, false>]/3824.
/usr/include/c++/9/bits/hashtable_policy.h:2111:57: optimized:  Inlining static _Tp* std::pointer_traits<_Tp*>::pointer_to(std::__make_not_void<_Tp>&) [with _Tp = std::__detail::_Hash_node<int, false>]/3824 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3707.
/usr/include/c++/9/bits/hashtable_policy.h:2103:7: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4988.
/usr/include/c++/9/bits/hashtable_policy.h:2103:7: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node_ptr(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4988 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3629.
/usr/include/c++/9/bits/hashtable_policy.h:2102:35: note: Considering inline candidate static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::__detail::_Hash_node<int, false>]/4972.
/usr/include/c++/9/bits/hashtable_policy.h:2102:35: optimized:  Inlining static void std::allocator_traits<std::allocator<_CharT> >::destroy(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*) [with _Up = int; _Tp = std::__detail::_Hash_node<int, false>]/4972 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3629.
/usr/include/c++/9/bits/hashtable_policy.h:2102:35: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705.
/usr/include/c++/9/bits/hashtable_policy.h:2102:35: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3629.
/usr/include/c++/9/bits/hashtable_policy.h:2102:35: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = int]/3534.
/usr/include/c++/9/bits/hashtable_policy.h:2102:35: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = int]/3534 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3629.
/usr/include/c++/9/bits/hashtable_policy.h:2124:4: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4991.
/usr/include/c++/9/bits/hashtable_policy.h:2124:4: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4991 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3523.
/usr/include/c++/9/bits/hashtable_policy.h:2123:8: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable_policy.h:2123:8: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3523.
/usr/include/c++/9/bits/hashtable.h:2028:7: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4994.
/usr/include/c++/9/bits/hashtable.h:2028:7: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_nodes(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4994 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3330.
/usr/include/c++/9/bits/hashtable.h:2028:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4949.
/usr/include/c++/9/bits/hashtable.h:2028:7: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4949 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3330.
/usr/include/c++/9/bits/hashtable.h:1354:5: note: Considering inline candidate std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc()/2517.
/usr/include/c++/9/bits/hashtable.h:1354:5: optimized:  Inlining std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc()/2517 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059.
/usr/include/c++/9/bits/hashtable.h:1353:7: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3331.
/usr/include/c++/9/bits/hashtable.h:1353:7: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3331 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059.
/usr/include/c++/9/bits/hashtable.h:1352:7: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3330.
/usr/include/c++/9/bits/hashtable.h:1352:7: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3330, growth 11 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/9/bits/unordered_set.h:97:11: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059.
/usr/include/c++/9/bits/unordered_set.h:97:11: missed:   will not early inline: std::unordered_set<int>::~unordered_set()/2526->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059, growth 5 exceeds --param early-inlining-insns divided by number of calls
us_map.cpp:21:7: note: Considering inline candidate std::unordered_set<int>::~unordered_set()/2526.
us_map.cpp:21:7: optimized:  Inlining std::unordered_set<int>::~unordered_set()/2526 into void __tcf_0(void*)/4124.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__detail::_Identity&]/3913.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__detail::_Identity&]/3913 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::__detail::_Identity&; int _Nm = 0; _Tp = std::__detail::_Identity]/3915.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::hash<int>&]/3917.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::hash<int>&]/3917 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::hash<int>&; int _Nm = 1; _Tp = std::hash<int>]/3919.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__detail::_Mod_range_hashing&]/3921.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const std::__detail::_Mod_range_hashing&]/3921 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::__detail::_Mod_range_hashing&; int _Nm = 2; _Tp = std::__detail::_Mod_range_hashing]/3923.
/usr/include/c++/9/bits/hashtable_policy.h:1285:63: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::__detail::_Mod_range_hashing&; int _Nm = 2; _Tp = std::__detail::_Mod_range_hashing]/3923.
/usr/include/c++/9/bits/hashtable_policy.h:1285:63: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::__detail::_Mod_range_hashing&; int _Nm = 2; _Tp = std::__detail::_Mod_range_hashing]/3923 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(const _ExtractKey&, const _H1&, const _H2&, const std::__detail::_Default_ranged_hash&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3836.
/usr/include/c++/9/bits/hashtable_policy.h:1285:63: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::hash<int>&; int _Nm = 1; _Tp = std::hash<int>]/3919.
/usr/include/c++/9/bits/hashtable_policy.h:1285:63: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::hash<int>&; int _Nm = 1; _Tp = std::hash<int>]/3919 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(const _ExtractKey&, const _H1&, const _H2&, const std::__detail::_Default_ranged_hash&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3836.
/usr/include/c++/9/bits/hashtable_policy.h:1285:63: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::__detail::_Identity&; int _Nm = 0; _Tp = std::__detail::_Identity]/3915.
/usr/include/c++/9/bits/hashtable_policy.h:1285:63: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::__detail::_Identity&; int _Nm = 0; _Tp = std::__detail::_Identity]/3915 into std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(const _ExtractKey&, const _H1&, const _H2&, const std::__detail::_Default_ranged_hash&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3836.
/usr/include/c++/9/bits/hashtable_policy.h:1825:65: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::equal_to<int>&; int _Nm = 0; _Tp = std::equal_to<int>]/3840.
/usr/include/c++/9/bits/hashtable_policy.h:1825:65: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = const std::equal_to<int>&; int _Nm = 0; _Tp = std::equal_to<int>]/3840 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_Hashtable_base(const _ExtractKey&, const _H1&, const _H2&, const _Hash&, const _Equal&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3720.
/usr/include/c++/9/bits/hashtable_policy.h:1825:65: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(const _ExtractKey&, const _H1&, const _H2&, const std::__detail::_Default_ranged_hash&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3836.
/usr/include/c++/9/bits/hashtable_policy.h:1825:65: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(const _ExtractKey&, const _H1&, const _H2&, const std::__detail::_Default_ranged_hash&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3836 into std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_Hashtable_base(const _ExtractKey&, const _H1&, const _H2&, const _Hash&, const _Equal&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3720.
/usr/include/c++/9/bits/hashtable_policy.h:1335:47: note: Considering inline candidate static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 2; _Tp = std::__detail::_Mod_range_hashing]/3929.
/usr/include/c++/9/bits/hashtable_policy.h:1335:47: optimized:  Inlining static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 2; _Tp = std::__detail::_Mod_range_hashing]/3929 into const _H2& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h2() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3850.
/usr/include/c++/9/bits/hashtable_policy.h:1297:23: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/4934.
/usr/include/c++/9/bits/hashtable_policy.h:1297:23: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/4934 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const _Key&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3730.
/usr/include/c++/9/bits/hashtable_policy.h:1297:23: note: Considering inline candidate const _H2& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h2() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3850.
/usr/include/c++/9/bits/hashtable_policy.h:1297:23: optimized:  Inlining const _H2& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h2() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3850 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const _Key&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3730.
/usr/include/c++/9/bits/hashtable.h:644:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const _Key&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/5000.
/usr/include/c++/9/bits/hashtable.h:644:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const _Key&, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/5000 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3643.
/usr/include/c++/9/bits/hashtable_policy.h:1461:18: note: Considering inline candidate constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/5002.
/usr/include/c++/9/bits/hashtable_policy.h:1461:18: optimized:  Inlining constexpr bool std::equal_to<_Tp>::operator()(const _Tp&, const _Tp&) const [with _Tp = int]/5002 into static bool std::__detail::_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>::_S_equals(const _Equal&, const _ExtractKey&, const _Key&, _HashCodeType, std::__detail::_Hash_node<_Value, false>*) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _HashCodeType = long unsigned int]/3851.
/usr/include/c++/9/bits/hashtable_policy.h:1461:33: note: Considering inline candidate _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = int&]/4969.
/usr/include/c++/9/bits/hashtable_policy.h:1461:33: optimized:  Inlining _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = int&]/4969 into static bool std::__detail::_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>::_S_equals(const _Equal&, const _ExtractKey&, const _Key&, _HashCodeType, std::__detail::_Hash_node<_Value, false>*) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _HashCodeType = long unsigned int]/3851.
/usr/include/c++/9/bits/hashtable_policy.h:1461:33: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = int]/3350.
/usr/include/c++/9/bits/hashtable_policy.h:1461:33: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = int]/3350 into static bool std::__detail::_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>::_S_equals(const _Equal&, const _ExtractKey&, const _Key&, _HashCodeType, std::__detail::_Hash_node<_Value, false>*) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _HashCodeType = long unsigned int]/3851.
/usr/include/c++/9/bits/hashtable_policy.h:1846:46: note: Considering inline candidate static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::equal_to<int>]/3931.
/usr/include/c++/9/bits/hashtable_policy.h:1846:46: optimized:  Inlining static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::equal_to<int>]/3931 into const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_eq() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3852.
/usr/include/c++/9/bits/hashtable_policy.h:1323:61: note: Considering inline candidate static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::__detail::_Identity]/3932.
/usr/include/c++/9/bits/hashtable_policy.h:1323:61: optimized:  Inlining static const _Tp& std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_S_cget(const std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>&) [with int _Nm = 0; _Tp = std::__detail::_Identity]/3932 into const _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3853.
/usr/include/c++/9/bits/hashtable_policy.h:1834:37: note: Considering inline candidate static bool std::__detail::_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>::_S_equals(const _Equal&, const _ExtractKey&, const _Key&, _HashCodeType, std::__detail::_Hash_node<_Value, false>*) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _HashCodeType = long unsigned int]/5005.
/usr/include/c++/9/bits/hashtable_policy.h:1834:37: optimized:  Inlining static bool std::__detail::_Equal_helper<_Key, _Value, _ExtractKey, _Equal, _HashCodeType, false>::_S_equals(const _Equal&, const _ExtractKey&, const _Key&, _HashCodeType, std::__detail::_Hash_node<_Value, false>*) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _HashCodeType = long unsigned int]/5005 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3731.
/usr/include/c++/9/bits/hashtable_policy.h:1834:37: note: Considering inline candidate const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_eq() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3852.
/usr/include/c++/9/bits/hashtable_policy.h:1834:37: optimized:  Inlining const _Equal& std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_eq() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3852 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3731.
/usr/include/c++/9/bits/hashtable_policy.h:1834:37: note: Considering inline candidate const _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3853.
/usr/include/c++/9/bits/hashtable_policy.h:1834:37: optimized:  Inlining const _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3853 into bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3731.
/usr/include/c++/9/ext/new_allocator.h:147:4: note: Considering inline candidate void* operator new(std::size_t, void*)/4930.
/usr/include/c++/9/ext/new_allocator.h:147:4: optimized:  Inlining void* operator new(std::size_t, void*)/4930 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/3935.
/usr/include/c++/9/ext/new_allocator.h:147:46: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548.
/usr/include/c++/9/ext/new_allocator.h:147:46: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548 into void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/3935.
/usr/include/c++/9/bits/alloc_traits.h:484:4: note: Considering inline candidate void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/5010.
/usr/include/c++/9/bits/alloc_traits.h:484:4: optimized:  Inlining void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/5010 into static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/3857.
/usr/include/c++/9/bits/alloc_traits.h:484:4: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548.
/usr/include/c++/9/bits/alloc_traits.h:484:4: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548 into static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/3857.
/usr/include/c++/9/bits/allocator.h:142:34: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__detail::_Hash_node<int, false>]/3959.
/usr/include/c++/9/bits/allocator.h:142:34: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::new_allocator(const __gnu_cxx::new_allocator<_Tp>&) [with _Tp = std::__detail::_Hash_node<int, false>]/3959 into std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<int, false>]/3926.
/usr/include/c++/9/bits/hashtable_policy.h:1100:38: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<int, false>]/3926.
/usr/include/c++/9/bits/hashtable_policy.h:1100:38: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator< <template-parameter-1-1> >&) [with _Tp = std::__detail::_Hash_node<int, false>]/3926 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<int, false> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3843.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3722.
/usr/include/c++/9/bits/hashtable_policy.h:1100:32: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3722 into std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<int, false> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3843.
/usr/include/c++/9/bits/hashtable_policy.h:2042:48: note: Considering inline candidate std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<int, false> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3843.
/usr/include/c++/9/bits/hashtable_policy.h:2042:48: optimized:  Inlining std::__detail::_Hashtable_ebo_helper<_Nm, _Tp, true>::_Hashtable_ebo_helper(_OtherTp&&) [with _OtherTp = std::allocator<std::__detail::_Hash_node<int, false> >; int _Nm = 0; _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3843 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<int, false> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3724.
/usr/include/c++/9/bits/hashtable_policy.h:2042:48: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3722.
/usr/include/c++/9/bits/hashtable_policy.h:2042:48: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = std::allocator<std::__detail::_Hash_node<int, false> >]/3722 into std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<int, false> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3724.
/usr/include/c++/9/bits/hashtable.h:409:44: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/2424.
/usr/include/c++/9/bits/hashtable.h:409:44: optimized:  Inlining std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)/2424 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633.
/usr/include/c++/9/bits/hashtable.h:409:44: note: Considering inline candidate std::__detail::_Hash_node_base::_Hash_node_base()/2417.
/usr/include/c++/9/bits/hashtable.h:409:44: optimized:  Inlining std::__detail::_Hash_node_base::_Hash_node_base()/2417 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633.
/usr/include/c++/9/bits/hashtable.h:409:44: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3056.
/usr/include/c++/9/bits/hashtable.h:409:44: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node<int, false>]/3056 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633.
/usr/include/c++/9/bits/hashtable.h:409:44: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<int, false> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3724.
/usr/include/c++/9/bits/hashtable.h:409:44: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::_Hashtable_alloc(_Alloc&&) [with _Alloc = std::allocator<std::__detail::_Hash_node<int, false> >; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3724 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633.
/usr/include/c++/9/bits/hashtable.h:409:44: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = int; _Tp = std::__detail::_Hash_node<int, false>]/3717.
/usr/include/c++/9/bits/hashtable.h:409:44: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = int; _Tp = std::__detail::_Hash_node<int, false>]/3717 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633.
/usr/include/c++/9/bits/hashtable.h:409:44: note: Considering inline candidate std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_Hashtable_base(const _ExtractKey&, const _H1&, const _H2&, const _Hash&, const _Equal&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3720.
/usr/include/c++/9/bits/hashtable.h:409:44: optimized:  Inlining std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_Hashtable_base(const _ExtractKey&, const _H1&, const _H2&, const _Hash&, const _Equal&) [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3720 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633.
/usr/include/c++/9/ext/new_allocator.h:104:10: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__detail::_Hash_node_base*]/5014.
/usr/include/c++/9/ext/new_allocator.h:104:10: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__detail::_Hash_node_base*]/5014 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/3928.
/usr/include/c++/9/bits/alloc_traits.h:444:32: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/5015.
/usr/include/c++/9/bits/alloc_traits.h:444:32: optimized:  Inlining _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node_base*]/5015 into static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/3847.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/3713.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/3713 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3727.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/3713.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = std::__detail::_Hash_node_base*]/3713 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3727.
/usr/include/c++/9/bits/hashtable_policy.h:2135:45: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/3848.
/usr/include/c++/9/bits/hashtable_policy.h:2135:45: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node_base*]/3848 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3727.
/usr/include/c++/9/bits/hashtable_policy.h:2134:51: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/5016.
/usr/include/c++/9/bits/hashtable_policy.h:2134:51: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node_base*]/5016 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3727.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<int, false>; _Tp = std::__detail::_Hash_node_base*]/3710.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator(const std::allocator<_Tp1>&) [with _Tp1 = std::__detail::_Hash_node<int, false>; _Tp = std::__detail::_Hash_node_base*]/3710 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3727.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705.
/usr/include/c++/9/bits/hashtable_policy.h:2132:27: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3727.
/usr/include/c++/9/bits/hashtable.h:361:47: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5019.
/usr/include/c++/9/bits/hashtable.h:361:47: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3637->std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5019, growth 8 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/9/ext/new_allocator.h:104:10: note: Considering inline candidate __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__detail::_Hash_node<int, false>]/5020.
/usr/include/c++/9/ext/new_allocator.h:104:10: optimized:  Inlining __gnu_cxx::new_allocator<_Tp>::size_type __gnu_cxx::new_allocator<_Tp>::max_size() const [with _Tp = std::__detail::_Hash_node<int, false>]/5020 into _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<int, false>]/3934.
/usr/include/c++/9/bits/alloc_traits.h:444:32: note: Considering inline candidate _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<int, false>]/5021.
/usr/include/c++/9/bits/alloc_traits.h:444:32: optimized:  Inlining _Tp* __gnu_cxx::new_allocator<_Tp>::allocate(__gnu_cxx::new_allocator<_Tp>::size_type, const void*) [with _Tp = std::__detail::_Hash_node<int, false>]/5021 into static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/3855.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: note: Considering inline candidate static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/5012.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: optimized:  Inlining static void std::allocator_traits<std::allocator<_CharT> >::construct(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, _Up*, _Args&& ...) [with _Up = int; _Args = {const int&}; _Tp = std::__detail::_Hash_node<int, false>]/5012 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: note: Considering inline candidate _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = int]/3534.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: optimized:  Inlining _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() [with _Value = int]/3534 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548.
/usr/include/c++/9/bits/hashtable_policy.h:2086:36: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2085:6: note: Considering inline candidate std::__detail::_Hash_node<int, false>::_Hash_node()/3739.
/usr/include/c++/9/bits/hashtable_policy.h:2085:6: optimized:  Inlining std::__detail::_Hash_node<int, false>::_Hash_node()/3739 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2085:6: note: Considering inline candidate void* operator new(std::size_t, void*)/4930.
/usr/include/c++/9/bits/hashtable_policy.h:2085:6: optimized:  Inlining void* operator new(std::size_t, void*)/4930 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2082:38: note: Considering inline candidate constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<int, false>]/3856.
/usr/include/c++/9/bits/hashtable_policy.h:2082:38: optimized:  Inlining constexpr _Tp* std::__to_address(_Tp*) [with _Tp = std::__detail::_Hash_node<int, false>]/3856 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2081:45: note: Considering inline candidate static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/5022.
/usr/include/c++/9/bits/hashtable_policy.h:2081:45: optimized:  Inlining static _Tp* std::allocator_traits<std::allocator<_CharT> >::allocate(std::allocator_traits<std::allocator<_CharT> >::allocator_type&, std::allocator_traits<std::allocator<_CharT> >::size_type) [with _Tp = std::__detail::_Hash_node<int, false>]/5022 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:2081:45: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705.
/usr/include/c++/9/bits/hashtable_policy.h:2081:45: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_alloc_type& std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_node_allocator() [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3705 into std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3741.
/usr/include/c++/9/bits/hashtable_policy.h:167:58: note: Considering inline candidate std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5026.
/usr/include/c++/9/bits/hashtable_policy.h:167:58: optimized:  Inlining std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type* std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_node(_Args&& ...) [with _Args = {const int&}; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5026 into std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const int&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3651.
/usr/include/c++/9/bits/hashtable_policy.h:167:58: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548.
/usr/include/c++/9/bits/hashtable_policy.h:167:58: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548 into std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const int&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3651.
/usr/include/c++/9/ext/aligned_buffer.h:119:16: note: Considering inline candidate const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = int]/3967.
/usr/include/c++/9/ext/aligned_buffer.h:119:16: optimized:  Inlining const void* __gnu_cxx::__aligned_buffer<_Tp>::_M_addr() const [with _Tp = int]/3967 into const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = int]/3966.
/usr/include/c++/9/bits/hashtable_policy.h:241:34: note: Considering inline candidate const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = int]/3966.
/usr/include/c++/9/bits/hashtable_policy.h:241:34: optimized:  Inlining const _Tp* __gnu_cxx::__aligned_buffer<_Tp>::_M_ptr() const [with _Tp = int]/3966 into const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = int]/3962.
/usr/include/c++/9/bits/hashtable_policy.h:249:16: note: Considering inline candidate const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = int]/3962.
/usr/include/c++/9/bits/hashtable_policy.h:249:16: optimized:  Inlining const _Value* std::__detail::_Hash_node_value_base<_Value>::_M_valptr() const [with _Value = int]/3962 into const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = int]/3933.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: note: Considering inline candidate std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/4934.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: optimized:  Inlining std::__detail::_Mod_range_hashing::result_type std::__detail::_Mod_range_hashing::operator()(std::__detail::_Mod_range_hashing::first_argument_type, std::__detail::_Mod_range_hashing::second_argument_type) const/4934 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3854.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: note: Considering inline candidate std::size_t std::hash<int>::operator()(int) const/4931.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: optimized:  Inlining std::size_t std::hash<int>::operator()(int) const/4931 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3854.
/usr/include/c++/9/bits/hashtable_policy.h:1304:44: note: Considering inline candidate _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const int&]/4959.
/usr/include/c++/9/bits/hashtable_policy.h:1304:44: optimized:  Inlining _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const int&]/4959 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3854.
/usr/include/c++/9/bits/hashtable_policy.h:1304:44: note: Considering inline candidate const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = int]/3933.
/usr/include/c++/9/bits/hashtable_policy.h:1304:44: optimized:  Inlining const _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() const [with _Value = int]/3933 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3854.
/usr/include/c++/9/bits/hashtable_policy.h:1304:44: note: Considering inline candidate const _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3853.
/usr/include/c++/9/bits/hashtable_policy.h:1304:44: optimized:  Inlining const _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3853 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3854.
/usr/include/c++/9/bits/hashtable_policy.h:1304:31: note: Considering inline candidate const _H1& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h1() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3729.
/usr/include/c++/9/bits/hashtable_policy.h:1304:31: optimized:  Inlining const _H1& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h1() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3729 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3854.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: note: Considering inline candidate const _H2& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h2() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3850.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: optimized:  Inlining const _H2& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_h2() const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3850 into std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3854.
/usr/include/c++/9/bits/hashtable.h:640:49: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/5030.
/usr/include/c++/9/bits/hashtable.h:640:49: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/5030 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3732.
/usr/include/c++/9/bits/hashtable.h:1543:9: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:1543:9: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3644.
/usr/include/c++/9/bits/hashtable.h:1548:56: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032.
/usr/include/c++/9/bits/hashtable.h:1548:56: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3644.
/usr/include/c++/9/bits/hashtable.h:1548:56: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:1548:56: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3644.
/usr/include/c++/9/bits/hashtable.h:1545:4: note: Considering inline candidate bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5007.
/usr/include/c++/9/bits/hashtable.h:1545:4: optimized:  Inlining bool std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::_M_equals(const _Key&, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__hash_code, std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::__node_type*) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5007 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3644.
/usr/include/c++/9/bits/hashtable.h:655:15: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5036.
/usr/include/c++/9/bits/hashtable.h:655:15: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5036 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3648.
/usr/include/c++/9/bits/hashtable.h:1581:16: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032.
/usr/include/c++/9/bits/hashtable.h:1581:16: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3746.
/usr/include/c++/9/bits/hashtable.h:1581:16: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:1581:16: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3746.
/usr/include/c++/9/bits/hashtable.h:1886:7: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4991.
/usr/include/c++/9/bits/hashtable.h:1886:7: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4991 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1885:16: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531.
/usr/include/c++/9/bits/hashtable.h:1885:16: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1885:16: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:1885:16: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1879:14: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032.
/usr/include/c++/9/bits/hashtable.h:1879:14: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1879:14: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:1879:14: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1875:2: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_remove_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3733.
/usr/include/c++/9/bits/hashtable.h:1875:2: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_remove_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3733, growth 13 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/9/bits/hashtable.h:1875:2: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:1875:2: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1876:17: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032.
/usr/include/c++/9/bits/hashtable.h:1876:17: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5032 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1876:17: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:1876:17: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1912:7: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645.
/usr/include/c++/9/bits/hashtable.h:1912:7: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645, growth 26 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable.h:1906:20: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5036.
/usr/include/c++/9/bits/hashtable.h:1906:20: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_before_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5036 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535.
/usr/include/c++/9/bits/hashtable.h:1903:19: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5001.
/usr/include/c++/9/bits/hashtable.h:1903:19: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5001 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535.
/usr/include/c++/9/bits/hashtable.h:1902:19: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_hash_code(const _Key&) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/4984.
/usr/include/c++/9/bits/hashtable.h:1902:19: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_hash_code(const _Key&) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/4984 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535.
/usr/include/c++/9/bits/hashtable.h:772:45: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535.
/usr/include/c++/9/bits/hashtable.h:772:45: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::erase(const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3351->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535, growth 23 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/unordered_set.h:545:30: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::erase(const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3351.
/usr/include/c++/9/bits/unordered_set.h:545:30: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::erase(const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3351 into std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::erase(const key_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3078.
/usr/include/c++/9/bits/hashtable.h:2113:7: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3331.
/usr/include/c++/9/bits/hashtable.h:2113:7: optimized:  Inlining void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_deallocate_buckets() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3331 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858.
/usr/include/c++/9/bits/hashtable.h:2095:57: note: Considering inline candidate std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/5030.
/usr/include/c++/9/bits/hashtable.h:2095:57: optimized:  Inlining std::size_t std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(const __node_type*, std::size_t) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/5030 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858.
/usr/include/c++/9/bits/hashtable.h:2094:17: note: Considering inline candidate std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950.
/usr/include/c++/9/bits/hashtable.h:2094:17: optimized:  Inlining std::__detail::_Hash_node<_Value, false>* std::__detail::_Hash_node<_Value, false>::_M_next() const [with _Value = int]/4950 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858.
/usr/include/c++/9/bits/hashtable.h:2089:20: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4949.
/usr/include/c++/9/bits/hashtable.h:2089:20: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_begin() const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4949 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858.
/usr/include/c++/9/bits/hashtable.h:2088:22: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3637.
/usr/include/c++/9/bits/hashtable.h:2088:22: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3637 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858.
/usr/include/c++/9/bits/hashtable.h:2073:4: note: Considering inline candidate void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/4937.
/usr/include/c++/9/bits/hashtable.h:2073:4: optimized:  Inlining void std::__detail::_Prime_rehash_policy::_M_reset(std::__detail::_Prime_rehash_policy::_State)/4937 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742.
/usr/include/c++/9/bits/hashtable.h:2067:4: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858.
/usr/include/c++/9/bits/hashtable.h:2067:4: missed:   will not early inline: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858, growth 31 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable.h:1726:4: note: Considering inline candidate void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4991.
/usr/include/c++/9/bits/hashtable.h:1726:4: optimized:  Inlining void std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_deallocate_node(std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_type*) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/4991 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1722:26: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531.
/usr/include/c++/9/bits/hashtable.h:1722:26: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1720:4: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3746.
/usr/include/c++/9/bits/hashtable.h:1720:4: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3746, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable.h:1717:4: note: Considering inline candidate void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__node_type*, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/4970.
/usr/include/c++/9/bits/hashtable.h:1717:4: optimized:  Inlining void std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__node_type*, std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/4970 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1714:14: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5001.
/usr/include/c++/9/bits/hashtable.h:1714:14: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5001 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1714:50: note: Considering inline candidate _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = int&]/4969.
/usr/include/c++/9/bits/hashtable.h:1714:50: optimized:  Inlining _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = int&]/4969 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1714:50: note: Considering inline candidate _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = int]/3350.
/usr/include/c++/9/bits/hashtable.h:1714:50: optimized:  Inlining _Value& std::__detail::_Hash_node_value_base<_Value>::_M_v() [with _Value = int]/3350 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1714:50: note: Considering inline candidate _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3646.
/usr/include/c++/9/bits/hashtable.h:1714:50: optimized:  Inlining _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3646 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1713:8: note: Considering inline candidate void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742.
/usr/include/c++/9/bits/hashtable.h:1713:8: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652->void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742, growth 17 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable.h:1704:29: note: Considering inline candidate std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/4936.
/usr/include/c++/9/bits/hashtable.h:1704:29: optimized:  Inlining std::__detail::_Prime_rehash_policy::_State std::__detail::_Prime_rehash_policy::_M_state() const/4936 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1818:68: note: Considering inline candidate constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<int, true, false>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3654.
/usr/include/c++/9/bits/hashtable.h:1818:68: optimized:  Inlining constexpr std::pair<_T1, _T2>::pair(_U1&&, _U2&&) [with _U1 = std::__detail::_Node_iterator<int, true, false>; _U2 = bool; typename std::enable_if<(std::_PCC<true, _T1, _T2>::_MoveConstructiblePair<_U1, _U2>() && std::_PCC<true, _T1, _T2>::_ImplicitlyMoveConvertiblePair<_U1, _U2>()), bool>::type <anonymous> = true; _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/3654 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1818:68: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652.
/usr/include/c++/9/bits/hashtable.h:1818:68: missed:   will not early inline: std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652, growth 36 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable.h:1817:18: note: Considering inline candidate std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const int&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5028.
/usr/include/c++/9/bits/hashtable.h:1817:18: optimized:  Inlining std::__detail::_AllocNode<_NodeAlloc>::__node_type* std::__detail::_AllocNode<_NodeAlloc>::operator()(_Arg&&) const [with _Arg = const int&; _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5028 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1817:18: note: Considering inline candidate constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548.
/usr/include/c++/9/bits/hashtable.h:1817:18: optimized:  Inlining constexpr _Tp&& std::forward(typename std::remove_reference<_Tp>::type&) [with _Tp = const int&]/3548 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1815:25: note: Considering inline candidate constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/4963.
/usr/include/c++/9/bits/hashtable.h:1815:25: optimized:  Inlining constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&) [with _T1 = std::__detail::_Node_iterator<int, true, false>; _T2 = bool]/4963 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1815:25: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531.
/usr/include/c++/9/bits/hashtable.h:1815:25: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::_Node_iterator(std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::__node_type*) [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3531 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1813:15: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5038.
/usr/include/c++/9/bits/hashtable.h:1813:15: missed:   will not early inline: std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5038, growth 16 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable.h:1811:12: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5001.
/usr/include/c++/9/bits/hashtable.h:1811:12: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_bucket_index(const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5001 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1810:14: note: Considering inline candidate std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_hash_code(const _Key&) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/4984.
/usr/include/c++/9/bits/hashtable.h:1810:14: optimized:  Inlining std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::__hash_code std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_hash_code(const _Key&) const [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/4984 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1809:42: note: Considering inline candidate _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const int&]/4959.
/usr/include/c++/9/bits/hashtable.h:1809:42: optimized:  Inlining _Tp&& std::__detail::_Identity::operator()(_Tp&&) const [with _Tp = const int&]/4959 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable.h:1809:42: note: Considering inline candidate _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3646.
/usr/include/c++/9/bits/hashtable.h:1809:42: optimized:  Inlining _ExtractKey& std::__detail::_Hash_code_base<_Key, _Value, _ExtractKey, _H1, _H2, std::__detail::_Default_ranged_hash, false>::_M_extract() [with _Key = int; _Value = int; _ExtractKey = std::__detail::_Identity; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing]/3646 into std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable_policy.h:824:55: note: Considering inline candidate std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549.
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed:   will not early inline: std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3352->std::pair<typename std::__detail::_Hashtable_base<_Key, _Value, _ExtractKey, _Equal, _H1, _H2, _Hash, _Traits>::iterator, bool> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert(_Arg&&, const _NodeGenerator&, std::true_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Arg = const int&; _NodeGenerator = std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3549, growth 20 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable_policy.h:823:18: note: Considering inline candidate std::__detail::_AllocNode<_NodeAlloc>::_AllocNode(std::__detail::_AllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3538.
/usr/include/c++/9/bits/hashtable_policy.h:823:18: optimized:  Inlining std::__detail::_AllocNode<_NodeAlloc>::_AllocNode(std::__detail::_AllocNode<_NodeAlloc>::__hashtable_alloc&) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/3538 into std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3352.
/usr/include/c++/9/bits/hashtable_policy.h:822:15: note: Considering inline candidate std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hashtable& std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_conjure_hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3536.
/usr/include/c++/9/bits/hashtable_policy.h:822:15: optimized:  Inlining std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hashtable& std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_conjure_hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3536 into std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3352.
/usr/include/c++/9/bits/hashtable.h:979:48: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059.
/usr/include/c++/9/bits/hashtable.h:979:48: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059, growth 5 exceeds --param early-inlining-insns divided by number of calls
/usr/include/c++/9/bits/hashtable.h:994:4: note: Considering inline candidate std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3352.
/usr/include/c++/9/bits/hashtable.h:994:4: optimized:  Inlining std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3352 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528.
/usr/include/c++/9/bits/hashtable.h:989:17: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3637.
/usr/include/c++/9/bits/hashtable.h:989:17: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__bucket_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_allocate_buckets(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3637 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528.
/usr/include/c++/9/bits/hashtable.h:984:14: note: Considering inline candidate constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/3038.
/usr/include/c++/9/bits/hashtable.h:984:14: optimized:  Inlining constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long unsigned int]/3038 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528.
/usr/include/c++/9/bits/hashtable.h:984:14: note: Considering inline candidate std::size_t std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t) const/4935.
/usr/include/c++/9/bits/hashtable.h:984:14: optimized:  Inlining std::size_t std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(std::size_t) const/4935 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528.
/usr/include/c++/9/bits/hashtable.h:981:43: note: Considering inline candidate typename std::iterator_traits<_Iterator>::difference_type std::__detail::__distance_fw(_Iterator, _Iterator) [with _Iterator = const int*]/3636.
/usr/include/c++/9/bits/hashtable.h:981:43: optimized:  Inlining typename std::iterator_traits<_Iterator>::difference_type std::__detail::__distance_fw(_Iterator, _Iterator) [with _Iterator = const int*]/3636 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528.
/usr/include/c++/9/bits/hashtable.h:979:48: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633.
/usr/include/c++/9/bits/hashtable.h:979:48: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3633 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528.
/usr/include/c++/9/bits/hashtable.h:466:26: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528.
/usr/include/c++/9/bits/hashtable.h:466:26: missed:   will not early inline: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(std::initializer_list<_Value>, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const key_equal&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3345->std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528, growth 29 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/hashtable.h:466:26: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::begin() const [with _E = int]/4945.
/usr/include/c++/9/bits/hashtable.h:466:26: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::begin() const [with _E = int]/4945 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(std::initializer_list<_Value>, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const key_equal&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3345.
/usr/include/c++/9/bits/hashtable.h:466:26: note: Considering inline candidate constexpr const _E* std::initializer_list<_E>::end() const [with _E = int]/3343.
/usr/include/c++/9/bits/hashtable.h:466:26: optimized:  Inlining constexpr const _E* std::initializer_list<_E>::end() const [with _E = int]/3343 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(std::initializer_list<_Value>, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const key_equal&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3345.
/usr/include/c++/9/bits/unordered_set.h:225:40: note: Considering inline candidate std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(std::initializer_list<_Value>, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const key_equal&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3345.
/usr/include/c++/9/bits/unordered_set.h:225:40: optimized:  Inlining std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(std::initializer_list<_Value>, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const key_equal&, const allocator_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3345 into std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set(std::initializer_list<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::value_type>, std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type, const hasher&, const key_equal&, const allocator_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3071.
us_map.cpp:27:15: optimized:   Inlining void* memcpy(void*, const void*, size_t)/230 into void dfs(int, int)/2529 (always_inline).
us_map.cpp:30:31: note: Considering inline candidate std::unordered_set<int>::~unordered_set()/2526.
us_map.cpp:30:31: optimized:  Inlining std::unordered_set<int>::~unordered_set()/2526 into void dfs(int, int)/2529.
us_map.cpp:22:6: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/3068.
us_map.cpp:22:6: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/3068 into void dfs(int, int)/2529.
us_map.cpp:30:31: note: Considering inline candidate std::unordered_set<int>::~unordered_set()/2526.
us_map.cpp:30:31: optimized:  Inlining std::unordered_set<int>::~unordered_set()/2526 into void dfs(int, int)/2529.
us_map.cpp:32:22: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076.
us_map.cpp:32:22: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076 into void dfs(int, int)/2529.
us_map.cpp:34:16: note: Considering inline candidate void dfs(int, int)/2529.
us_map.cpp:34:16: missed:   Not inlining: recursive call.
us_map.cpp:32:22: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966.
us_map.cpp:32:22: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966 into void dfs(int, int)/2529.
us_map.cpp:32:22: note: Considering inline candidate bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940.
us_map.cpp:32:22: optimized:  Inlining bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940 into void dfs(int, int)/2529.
us_map.cpp:32:22: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957.
us_map.cpp:32:22: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957 into void dfs(int, int)/2529.
us_map.cpp:32:22: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073.
us_map.cpp:32:22: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073 into void dfs(int, int)/2529.
us_map.cpp:31:27: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076.
us_map.cpp:31:27: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076 into void dfs(int, int)/2529.
us_map.cpp:31:41: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::erase(const key_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3078.
us_map.cpp:31:41: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::erase(const key_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3078 into void dfs(int, int)/2529.
us_map.cpp:31:27: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966.
us_map.cpp:31:27: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966 into void dfs(int, int)/2529.
us_map.cpp:31:27: note: Considering inline candidate bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940.
us_map.cpp:31:27: optimized:  Inlining bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940 into void dfs(int, int)/2529.
us_map.cpp:31:27: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957.
us_map.cpp:31:27: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957 into void dfs(int, int)/2529.
us_map.cpp:31:27: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073.
us_map.cpp:31:27: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073 into void dfs(int, int)/2529.
us_map.cpp:22:6: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/3068.
us_map.cpp:22:6: optimized:  Inlining std::allocator< <template-parameter-1-1> >::~allocator() [with _Tp = int]/3068 into void dfs(int, int)/2529.
us_map.cpp:30:31: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set(std::initializer_list<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::value_type>, std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type, const hasher&, const key_equal&, const allocator_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3071.
us_map.cpp:30:31: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::unordered_set(std::initializer_list<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::value_type>, std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type, const hasher&, const key_equal&, const allocator_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3071 into void dfs(int, int)/2529.
us_map.cpp:30:31: note: Considering inline candidate std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int]/3065.
us_map.cpp:30:31: optimized:  Inlining std::allocator< <template-parameter-1-1> >::allocator() [with _Tp = int]/3065 into void dfs(int, int)/2529.
us_map.cpp:25:42: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063.
us_map.cpp:25:42: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063 into void dfs(int, int)/2529.
us_map.cpp:25:26: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061.
us_map.cpp:25:26: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061 into void dfs(int, int)/2529.
/usr/include/c++/9/bits/unordered_set.h:421:31: note: Considering inline candidate std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3352.
/usr/include/c++/9/bits/unordered_set.h:421:31: optimized:  Inlining std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__ireturn_type std::__detail::_Insert_base<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::insert(const value_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3352 into std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3083.
us_map.cpp:50:11: optimized:   Inlining void* memset(void*, int, size_t)/233 into int main()/2530 (always_inline).
us_map.cpp:49:11: optimized:   Inlining void* memset(void*, int, size_t)/233 into int main()/2530 (always_inline).
us_map.cpp:76:13: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063.
us_map.cpp:76:13: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063 into int main()/2530.
us_map.cpp:75:66: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061.
us_map.cpp:75:66: missed:   will not early inline: int main()/2530->std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061, growth 4 exceeds --param early-inlining-insns divided by number of calls
us_map.cpp:75:47: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061.
us_map.cpp:75:47: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061 into int main()/2530.
us_map.cpp:74:32: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063.
us_map.cpp:74:32: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063 into int main()/2530.
us_map.cpp:74:13: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061.
us_map.cpp:74:13: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061 into int main()/2530.
us_map.cpp:73:8: note: Considering inline candidate void dfs(int, int)/2529.
us_map.cpp:73:8: missed:   will not early inline: int main()/2530->void dfs(int, int)/2529, growth 73 exceeds --param early-inlining-insns
us_map.cpp:72:31: note: Considering inline candidate std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063.
us_map.cpp:72:31: optimized:  Inlining std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>]/3063 into int main()/2530.
us_map.cpp:72:13: note: Considering inline candidate std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061.
us_map.cpp:72:13: optimized:  Inlining std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061 into int main()/2530.
us_map.cpp:70:28: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076.
us_map.cpp:70:28: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076 into int main()/2530.
us_map.cpp:70:28: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966.
us_map.cpp:70:28: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966 into int main()/2530.
us_map.cpp:70:28: note: Considering inline candidate bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940.
us_map.cpp:70:28: optimized:  Inlining bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940 into int main()/2530.
us_map.cpp:70:28: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957.
us_map.cpp:70:28: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957 into int main()/2530.
us_map.cpp:70:28: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073.
us_map.cpp:70:28: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073 into int main()/2530.
us_map.cpp:59:24: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076.
us_map.cpp:59:24: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>& std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator++() [with _Value = int; bool __constant_iterators = true; bool __cache = false]/3076 into int main()/2530.
us_map.cpp:59:24: note: Considering inline candidate std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966.
us_map.cpp:59:24: optimized:  Inlining std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::reference std::__detail::_Node_iterator<_Value, __constant_iterators, __cache>::operator*() const [with _Value = int; bool __constant_iterators = true; bool __cache = false]/4966 into int main()/2530.
us_map.cpp:59:24: note: Considering inline candidate bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940.
us_map.cpp:59:24: optimized:  Inlining bool std::__detail::operator!=(const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&, const std::__detail::_Node_iterator_base<_Value, _Cache_hash_code>&) [with _Value = int; bool _Cache_hash_code = false]/4940 into int main()/2530.
us_map.cpp:59:24: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957.
us_map.cpp:59:24: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::end() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/4957 into int main()/2530.
us_map.cpp:59:24: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073.
us_map.cpp:59:24: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::iterator std::unordered_set<_Value, _Hash, _Pred, _Alloc>::begin() [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3073 into int main()/2530.
us_map.cpp:53:38: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size() const [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3084.
us_map.cpp:53:38: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size() const [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3084 into int main()/2530.
us_map.cpp:52:22: note: Considering inline candidate std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size() const [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3084.
us_map.cpp:52:22: optimized:  Inlining std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size_type std::unordered_set<_Value, _Hash, _Pred, _Alloc>::size() const [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3084 into int main()/2530.
us_map.cpp:46:22: note: Considering inline candidate std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3083.
us_map.cpp:46:22: optimized:  Inlining std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3083 into int main()/2530.
us_map.cpp:45:22: note: Considering inline candidate std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3083.
us_map.cpp:45:22: optimized:  Inlining std::pair<typename std::_Hashtable<_Value, _Value, _Alloc, std::__detail::_Identity, _Pred, _Hash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<std::__not_<std::__and_<std::__is_fast_hash<_Hash>, std::__is_nothrow_invocable<const _Hash&, const _Tp&> > >::value, true, true> >::iterator, bool> std::unordered_set<_Value, _Hash, _Pred, _Alloc>::insert(const value_type&) [with _Value = int; _Hash = std::hash<int>; _Pred = std::equal_to<int>; _Alloc = std::allocator<int>]/3083 into int main()/2530.
us_map.cpp:44:33: note: Considering inline candidate int read()/2497.
us_map.cpp:44:33: missed:   will not early inline: int main()/2530->int read()/2497, growth 24 exceeds --param early-inlining-insns
us_map.cpp:44:21: note: Considering inline candidate int read()/2497.
us_map.cpp:44:21: missed:   will not early inline: int main()/2530->int read()/2497, growth 24 exceeds --param early-inlining-insns
us_map.cpp:42:45: note: Considering inline candidate int read()/2497.
us_map.cpp:42:45: missed:   will not early inline: int main()/2530->int read()/2497, growth 24 exceeds --param early-inlining-insns
us_map.cpp:41:17: note: Considering inline candidate int read()/2497.
us_map.cpp:41:17: missed:   will not early inline: int main()/2530->int read()/2497, growth 24 exceeds --param early-inlining-insns
us_map.cpp:40:17: note: Considering inline candidate int read()/2497.
us_map.cpp:40:17: missed:   will not early inline: int main()/2530->int read()/2497, growth 24 exceeds --param early-inlining-insns
us_map.cpp:77:1: note: Considering inline candidate void __static_initialization_and_destruction_0(int, int)/4125.
us_map.cpp:77:1: missed:   will not early inline: (static initializers for us_map.cpp)/4894->void __static_initialization_and_destruction_0(int, int)/4125, growth 18 exceeds --param early-inlining-insns
/usr/include/c++/9/bits/locale_facets.h:877:23: optimized: speculatively devirtualizing call in std::ctype<char>::char_type std::ctype<char>::widen(char) const/4933 to virtual std::ctype<char>::char_type std::ctype<char>::do_widen(char) const/680
/usr/include/c++/9/ext/new_allocator.h:114:41: missed:   not inlinable: _M_insert.constprop/5083 -> void* operator new(std::size_t)/4912, function body not available
/usr/include/c++/9/iostream:74:25: missed:   not inlinable: __static_initialization_and_destruction_0.constprop/5082 -> std::ios_base::Init::Init()/4925, function body not available
/usr/include/c++/9/iostream:74:25: missed:   not inlinable: __static_initialization_and_destruction_0.constprop/5082 -> int __cxa_atexit(void (*)(void*), void*, void*)/4926, function body not available
us_map.cpp:21:7: missed:   not inlinable: __static_initialization_and_destruction_0.constprop/5082 -> int __cxa_atexit(void (*)(void*), void*, void*)/4926, function body not available
/usr/include/c++/9/bits/hashtable_policy.h:2136:23: missed:   not inlinable: std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5019 -> void* __builtin_memset(void*, int, long unsigned int)/4910, function body not available
/usr/include/c++/9/ext/new_allocator.h:114:41: missed:   not inlinable: std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5019 -> void* operator new(std::size_t)/4912, function body not available
/usr/include/c++/9/ext/new_allocator.h:105:26: missed:   not inlinable: std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5019 -> void std::__throw_bad_alloc()/4911, function body not available
/usr/include/c++/9/bits/locale_facets.h:876:21: missed:   not inlinable: std::ctype<char>::char_type std::ctype<char>::widen(char) const/4933 -> void std::ctype<char>::_M_widen_init() const/4900, function body not available
/usr/include/c++/9/bits/basic_ios.h:158:9: missed:   not inlinable: std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/4932 -> void std::basic_ios<_CharT, _Traits>::clear(std::ios_base::iostate) [with _CharT = char; _Traits = std::char_traits<char>]/4903, function body not available
/usr/include/c++/9/ext/new_allocator.h:128:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858 -> void operator delete(void*)/4917, function body not available
/usr/include/c++/9/bits/hashtable.h:343:32: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858 -> long int __builtin_expect(long int, long int)/4909, function body not available
/usr/include/c++/9/bits/hashtable.h:355:22: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858 -> long int __builtin_expect(long int, long int)/4909, function body not available
/usr/include/c++/9/bits/hashtable.h:2069:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742 -> void __cxa_end_catch()/4916, function body not available
/usr/include/c++/9/bits/hashtable.h:2074:4: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742 -> void __cxa_rethrow()/4915, function body not available
/usr/include/c++/9/bits/hashtable.h:2069:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742 -> void* __cxa_begin_catch(void*)/4914, function body not available
/usr/include/c++/9/bits/hashtable.h:2069:7: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742 -> void* __builtin_eh_pointer(int)/4913, function body not available
/usr/include/c++/9/bits/hashtable.h:1724:7: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 -> void __cxa_end_catch()/4916, function body not available
/usr/include/c++/9/bits/hashtable.h:1727:4: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 -> void __cxa_rethrow()/4915, function body not available
/usr/include/c++/9/ext/new_allocator.h:128:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 -> void operator delete(void*)/4917, function body not available
/usr/include/c++/9/bits/hashtable.h:1724:7: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 -> void* __cxa_begin_catch(void*)/4914, function body not available
/usr/include/c++/9/bits/hashtable.h:1724:7: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 -> void* __builtin_eh_pointer(int)/4913, function body not available
/usr/include/c++/9/bits/hashtable.h:1705:36: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 -> std::pair<bool, long unsigned int> std::__detail::_Prime_rehash_policy::_M_need_rehash(std::size_t, std::size_t, std::size_t) const/4918, function body not available
/usr/include/c++/9/ext/new_allocator.h:128:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645 -> void operator delete(void*)/4917, function body not available
/usr/include/c++/9/bits/hashtable.h:979:48: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3060, call is unlikely and code size would grow
/usr/include/c++/9/bits/hashtable.h:355:22: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528 -> long int __builtin_expect(long int, long int)/4909, function body not available
/usr/include/c++/9/bits/hashtable.h:982:7: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528 -> std::size_t std::__detail::_Prime_rehash_policy::_M_next_bkt(std::size_t) const/4907, function body not available
/usr/include/c++/9/bits/basic_ios.h:50:18: missed:   not inlinable: std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/3333 -> void std::__throw_bad_cast()/4899, function body not available
/usr/include/c++/9/bits/hashtable.h:2029:23: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3330 -> void* __builtin_memset(void*, int, long unsigned int)/4910, function body not available
/usr/include/c++/9/ext/new_allocator.h:128:19: missed:   not inlinable: void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3330 -> void operator delete(void*)/4917, function body not available
/usr/include/c++/9/ostream:622:25: missed:   not inlinable: std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::flush() [with _CharT = char; _Traits = std::char_traits<char>]/4901, function body not available
/usr/include/c++/9/ostream:600:19: missed:   not inlinable: std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::put(std::basic_ostream<_CharT, _Traits>::char_type) [with _CharT = char; _Traits = std::char_traits<char>]/4898, function body not available
/usr/include/c++/9/ostream:570:18: missed:   not inlinable: std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/4902, function body not available
/usr/include/c++/9/bits/char_traits.h:335:25: missed:   not inlinable: std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061 -> long unsigned int __builtin_strlen(const char*)/4904, function body not available
/usr/include/c++/9/ext/new_allocator.h:128:19: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059 -> void operator delete(void*)/4917, function body not available
/usr/include/c++/9/bits/hashtable.h:343:32: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059 -> long int __builtin_expect(long int, long int)/4909, function body not available
missed:   not inlinable: int main()/2530 -> void __builtin_stack_restore(void*)/4921, function body not available
/usr/include/c++/9/ostream:113:13: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062, call is unlikely and code size would grow
us_map.cpp:75:66: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]/4895, function body not available
/usr/include/c++/9/ostream:570:18: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/4902, function body not available
us_map.cpp:75:47: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]/4895, function body not available
/usr/include/c++/9/ostream:113:13: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062, call is unlikely and code size would grow
us_map.cpp:74:25: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]/4895, function body not available
/usr/include/c++/9/ostream:570:18: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/4902, function body not available
us_map.cpp:73:8: missed:   not inlinable: int main()/2530 -> void dfs(int, int)/2529, --param max-inline-insns-auto limit reached
/usr/include/c++/9/ostream:113:13: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062, call is unlikely and code size would grow
/usr/include/c++/9/ostream:570:18: missed:   not inlinable: int main()/2530 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/4902, function body not available
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:33: missed:   not inlinable: int main()/2530 -> void* __builtin___memset_chk(void*, int, long unsigned int, long unsigned int)/4924, function body not available
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:33: missed:   not inlinable: int main()/2530 -> long unsigned int __builtin_object_size(const void*, int)/4905, function body not available
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:33: missed:   not inlinable: int main()/2530 -> void* __builtin___memset_chk(void*, int, long unsigned int, long unsigned int)/4924, function body not available
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:33: missed:   not inlinable: int main()/2530 -> long unsigned int __builtin_object_size(const void*, int)/4905, function body not available
us_map.cpp:48:30: missed:   not inlinable: int main()/2530 -> void* __builtin_alloca_with_align(long unsigned int, long unsigned int)/4920, function body not available
us_map.cpp:48:9: missed:   not inlinable: int main()/2530 -> void* __builtin_alloca_with_align(long unsigned int, long unsigned int)/4920, function body not available
us_map.cpp:41:17: missed:   not inlinable: int main()/2530 -> int read()/2497, call is unlikely and code size would grow
us_map.cpp:40:17: missed:   not inlinable: int main()/2530 -> int read()/2497, call is unlikely and code size would grow
us_map.cpp:76:17: missed:   not inlinable: int main()/2530 -> void* __builtin_stack_save()/4919, function body not available
/usr/include/c++/9/bits/unordered_set.h:97:11: missed:   not inlinable: void dfs(int, int)/2529 -> std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3060, call is unlikely and code size would grow
us_map.cpp:34:16: missed:   not inlinable: void dfs(int, int)/2529 -> void dfs(int, int)/2529, --param max-inline-insns-auto limit reached
us_map.cpp:25:34: missed:   not inlinable: void dfs(int, int)/2529 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]/4895, function body not available
/usr/include/c++/9/ostream:570:18: missed:   not inlinable: void dfs(int, int)/2529 -> std::basic_ostream<_CharT, _Traits>& std::__ostream_insert(std::basic_ostream<_CharT, _Traits>&, const _CharT*, std::streamsize) [with _CharT = char; _Traits = std::char_traits<char>]/4902, function body not available
us_map.cpp:25:26: missed:   not inlinable: void dfs(int, int)/2529 -> std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]/4895, function body not available
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed:   not inlinable: int read()/2497 -> int getc(FILE*)/4923, function body not available
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed:   not inlinable: int read()/2497 -> int getc(FILE*)/4923, function body not available
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed:   not inlinable: int read()/2497 -> int getc(FILE*)/4923, function body not available
/usr/include/c++/9/bits/locale_facets.h:877:23: optimized:  Inlined virtual std::ctype<char>::char_type std::ctype<char>::do_widen(char) const/5085 into std::ctype<char>::char_type std::ctype<char>::widen(char) const/4933 which now has time 18.600000 and size 13, net change of -4.
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed:   not inlinable: int main()/2530 -> _M_insert.constprop/5083, --param max-inline-insns-auto limit reached
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed:   not inlinable: int main()/2530 -> _M_insert.constprop/5083, --param max-inline-insns-auto limit reached
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528 -> _M_insert.constprop/5083, --param max-inline-insns-auto limit reached
/usr/include/c++/9/bits/hashtable.h:1813:15: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type* std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_find_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const key_type&, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code) const [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5038 into _M_insert.constprop/5083 which now has time 196.506766 and size 47, net change of -9.
optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_remove_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/4967 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_remove_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3733 which now has time 13.775000 and size 24, net change of -8.
/usr/include/c++/9/bits/hashtable.h:1352:7: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::clear() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3330 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3059 which now has time 146.672728 and size 21, net change of -7.
us_map.cpp:77:1: optimized:  Inlined __static_initialization_and_destruction_0.constprop/5082 into (static initializers for us_map.cpp)/4894 which now has time 79.624450 and size 24, net change of -6.
us_map.cpp:75:66: optimized:  Inlined std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*) [with _Traits = std::char_traits<char>]/3061 into int main()/2530 which now has time 2432.074619 and size 141, net change of +4.
/usr/include/c++/9/bits/hashtable.h:772:45: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535 into void dfs(int, int)/2529 which now has time 569.555369 and size 104, net change of -8.
/usr/include/c++/9/bits/hashtable.h:1720:4: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3746 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 which now has time 52.995000 and size 65, net change of -10.
/usr/include/c++/9/bits/hashtable.h:1912:7: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::true_type, const key_type&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3535 which now has time 188.522608 and size 32, net change of -14.
/usr/include/c++/9/bits/hashtable.h:1713:8: missed:   not inlinable: std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 -> void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742, --param max-inline-insns-auto limit reached
/usr/include/c++/9/bits/hashtable.h:2067:4: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const __rehash_state&) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3742 which now has time 227.292730 and size 56, net change of -11.
/usr/include/c++/9/bits/unordered_set.h:97:11: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5087 into void __tcf_0(void*)/4124 which now has time 14574.100433 and size 23, net change of +15.
/usr/include/c++/9/bits/hashtable.h:1875:2: optimized:  Inlined void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_remove_bucket_begin(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3733 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_erase(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_base*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3645 which now has time 42.550200 and size 39, net change of -8.
/usr/include/c++/9/bits/hashtable.h:466:26: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528 into void dfs(int, int)/2529 which now has time 661.622841 and size 167, net change of -27.
/usr/include/c++/9/bits/hashtable.h:361:47: optimized:  Inlined std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5089 into void std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_rehash_aux(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::true_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3858 which now has time 232.270002 and size 42, net change of +8.
/usr/include/c++/9/bits/hashtable.h:1818:68: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::iterator std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_M_insert_unique_node(std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__hash_code, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::__node_type*, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type) [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3652 into _M_insert.constprop/5083 which now has time 202.127070 and size 98, net change of -14.
/usr/include/c++/9/bits/hashtable.h:361:47: optimized:  Inlined std::__detail::_Hashtable_alloc<_NodeAlloc>::__node_base** std::__detail::_Hashtable_alloc<_NodeAlloc>::_M_allocate_buckets(std::size_t) [with _NodeAlloc = std::allocator<std::__detail::_Hash_node<int, false> >]/5019 into std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::_Hashtable(_InputIterator, _InputIterator, std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::size_type, const _H1&, const _H2&, const _Hash&, const _Equal&, const _ExtractKey&, const allocator_type&) [with _InputIterator = const int*; _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/3528 which now has time 205.268183 and size 49, net change of -6.
us_map.cpp:42:45: optimized:  Inlined int read()/5090 into int main()/2530 which now has time 5057.942451 and size 165, net change of +24.
us_map.cpp:44:21: optimized:  Inlined int read()/5091 into int main()/2530 which now has time 7683.810295 and size 189, net change of +24.
us_map.cpp:44:33: optimized:  Inlined int read()/5092 into int main()/2530 which now has time 10309.678146 and size 213, net change of +24.
/usr/include/c++/9/bits/unordered_set.h:97:11: optimized:  Inlined std::_Hashtable<_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits>::~_Hashtable() [with _Key = int; _Value = int; _Alloc = std::allocator<int>; _ExtractKey = std::__detail::_Identity; _Equal = std::equal_to<int>; _H1 = std::hash<int>; _H2 = std::__detail::_Mod_range_hashing; _Hash = std::__detail::_Default_ranged_hash; _RehashPolicy = std::__detail::_Prime_rehash_policy; _Traits = std::__detail::_Hashtable_traits<false, true, true>]/5093 into void dfs(int, int)/2529 which now has time 707.944892 and size 190, net change of +15.
/usr/include/c++/9/ostream:113:13: optimized:  Inlined std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/5095 into void dfs(int, int)/2529 which now has time 717.679892 and size 202, net change of +12.
/usr/include/c++/9/ostream:600:19: optimized:  Inlined std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/5096 into std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/5095 which now has time 43.000000 and size 17, net change of +7.
optimized:  Inlined std::ctype<char>::char_type std::ctype<char>::widen(char) const/5097 into std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/5096 which now has time 14.864854 and size 15, net change of +6.
optimized:  Inlined std::ctype<char>::char_type std::ctype<char>::widen(char) const/4933 into std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/3333 which now has time 16.379528 and size 21, net change of -13.
/usr/include/c++/9/ostream:600:19: optimized:  Inlined std::basic_ios<_CharT, _Traits>::char_type std::basic_ios<_CharT, _Traits>::widen(char) const [with _CharT = char; _Traits = std::char_traits<char>]/3333 into std::basic_ostream<_CharT, _Traits>& std::endl(std::basic_ostream<_CharT, _Traits>&) [with _CharT = char; _Traits = std::char_traits<char>]/3062 which now has time 43.880328 and size 30, net change of +0.
Unit growth for small function inlining: 707->701 (-1%)

Inlined 276 calls, eliminated 164 functions

us_map.cpp:21:7: missed: couldn't vectorize loop
us_map.cpp:21:7: missed: not vectorized: control flow in loop.
/usr/include/c++/9/bits/hashtable_policy.h:2120:7: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable_policy.h:2120:7: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:21:7: note: vectorized 0 loops in function.
/usr/include/c++/9/bits/hashtable_policy.h:2123:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:2112:7: missed: failed: evolution of base is not affine.
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (__n_11);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (__n_11);
/usr/include/c++/9/bits/hashtable.h:2029:23: missed: statement clobbers memory: __builtin_memset (_18, 0, _17);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (_8);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _28 = getc (stdin.33_27);
us_map.cpp:13:26: missed: couldn't vectorize loop
us_map.cpp:13:26: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:9:12: missed: couldn't vectorize loop
us_map.cpp:9:12: missed: not vectorized: control flow in loop.
us_map.cpp:6:12: note: vectorized 0 loops in function.
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _28 = getc (stdin.33_27);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _30 = getc (stdin.33_29);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _26 = getc (stdin.33_25);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _28 = getc (stdin.33_27);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _30 = getc (stdin.33_29);
/usr/include/c++/9/bits/hashtable_policy.h:2120:7: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable_policy.h:2120:7: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/9/bits/hashtable.h:1348:5: note: vectorized 0 loops in function.
/usr/include/c++/9/bits/hashtable_policy.h:2123:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:2112:7: missed: failed: evolution of base is not affine.
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (__n_3);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (__n_3);
/usr/include/c++/9/bits/hashtable.h:2029:23: missed: statement clobbers memory: __builtin_memset (_17, 0, _16);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (_4);
/usr/include/c++/9/bits/hashtable.h:2094:17: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2096:22: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2107:44: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2107:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2108:21: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2108:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2098:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2100:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2101:17: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2102:3: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2092:7: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable.h:2092:7: missed: not vectorized: number of iterations cannot be computed.
/usr/include/c++/9/bits/hashtable.h:2061:5: note: vectorized 0 loops in function.
/usr/include/c++/9/bits/hashtable.h:2094:17: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2096:22: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2107:44: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2107:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2108:21: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2108:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2098:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2100:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2101:17: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable.h:2102:3: missed: failed: evolution of base is not affine.
/usr/include/c++/9/ext/new_allocator.h:105:26: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/9/ext/new_allocator.h:114:41: missed: not vectorized: statement can throw an exception: _43 = operator new (_42);
/usr/include/c++/9/bits/hashtable_policy.h:2136:23: missed: statement clobbers memory: __builtin_memset (_43, 0, _42);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (_35);
/usr/include/c++/9/bits/hashtable.h:2069:7: missed: statement clobbers memory: _1 = __builtin_eh_pointer (1);
/usr/include/c++/9/bits/hashtable.h:2069:7: missed: statement clobbers memory: __cxa_begin_catch (_1);
/usr/include/c++/9/bits/hashtable.h:2074:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/9/bits/hashtable.h:2069:7: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/9/bits/hashtable.h:1545:4: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable.h:1545:4: missed: not vectorized: control flow in loop.
/usr/include/c++/9/bits/hashtable.h:1803:7: note: vectorized 0 loops in function.
/usr/include/c++/9/bits/hashtable.h:1548:14: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: missed: failed: evolution of base is not affine.
/usr/include/c++/9/ext/new_allocator.h:114:41: missed: statement clobbers memory: _8 = operator new (16);
/usr/include/c++/9/bits/hashtable.h:1705:36: missed: statement clobbers memory: __do_rehash = std::__detail::_Prime_rehash_policy::_M_need_rehash (_41, _43, _42, 1);
/usr/include/c++/9/bits/hashtable.h:1713:8: missed: not vectorized: statement can throw an exception: std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash (this_4(D), _45, &D.179544);
/usr/include/c++/9/bits/hashtable.h:1724:7: missed: statement clobbers memory: _51 = __builtin_eh_pointer (3);
/usr/include/c++/9/bits/hashtable.h:1724:7: missed: statement clobbers memory: __cxa_begin_catch (_51);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (_8);
/usr/include/c++/9/bits/hashtable.h:1727:4: missed: not vectorized: statement can throw an exception: __cxa_rethrow ();
/usr/include/c++/9/bits/hashtable.h:1724:7: missed: statement clobbers memory: __cxa_end_catch ();
/usr/include/c++/9/bits/hashtable_policy.h:2120:7: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable_policy.h:2120:7: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:32:22: missed: couldn't vectorize loop
us_map.cpp:32:22: missed: not vectorized: control flow in loop.
us_map.cpp:31:27: missed: couldn't vectorize loop
us_map.cpp:31:27: missed: not vectorized: control flow in loop.
/usr/include/c++/9/bits/hashtable.h:1545:4: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable.h:1545:4: missed: not vectorized: control flow in loop.
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed: not vectorized: control flow in loop.
us_map.cpp:22:6: note: vectorized 0 loops in function.
us_map.cpp:32:22: missed: failed: evolution of base is not affine.
us_map.cpp:34:16: missed: statement clobbers memory: dfs (_93, _8);
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed: statement clobbers memory: D.179580 = std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert.constprop (&color._M_h, __f_71);
/usr/include/c++/9/bits/hashtable.h:1548:14: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:1304:23: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:2123:8: missed: failed: evolution of base is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:2112:7: missed: failed: evolution of base is not affine.
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (__n_105);
us_map.cpp:25:26: missed: statement clobbers memory: _35 = std::basic_ostream<char>::operator<< (&cout, _4);
/usr/include/c++/9/ostream:570:18: missed: statement clobbers memory: std::__ostream_insert<char, std::char_traits<char> > (_35, "\t", 1);
us_map.cpp:25:34: missed: statement clobbers memory: _37 = std::basic_ostream<char>::operator<< (_35, cost_14(D));
/usr/include/c++/9/bits/basic_ios.h:50:18: missed: statement clobbers memory: std::__throw_bad_cast ();
/usr/include/c++/9/bits/locale_facets.h:876:21: missed: statement clobbers memory: std::ctype<char>::_M_widen_init (_65);
/usr/include/c++/9/bits/locale_facets.h:877:23: missed: statement clobbers memory: _81 = OBJ_TYPE_REF(_75;_65->6) (_65, 10);
/usr/include/c++/9/ostream:600:19: missed: statement clobbers memory: _63 = std::basic_ostream<char>::put (_37, prephitmp_61);
/usr/include/c++/9/ostream:622:25: missed: statement clobbers memory: std::basic_ostream<char>::flush (_63);
us_map.cpp:22:6: missed: not vectorized: more than one data ref in stmt: MEM[(char * {ref-all})&c_res] = MEM[(char * {ref-all})&c];
/usr/include/c++/9/bits/hashtable.h:982:7: missed: not vectorized: statement can throw an exception: _96 = std::__detail::_Prime_rehash_policy::_M_next_bkt (&MEM[(struct _Hashtable *)&color]._M_rehash_policy, 4);
/usr/include/c++/9/bits/hashtable.h:982:7: note: ***** Re-trying analysis with vector size 16
/usr/include/c++/9/bits/hashtable.h:982:7: missed: not vectorized: statement can throw an exception: _96 = std::__detail::_Prime_rehash_policy::_M_next_bkt (&MEM[(struct _Hashtable *)&color]._M_rehash_policy, 4);
/usr/include/c++/9/bits/hashtable.h:982:7: note: SLPing BB part
/usr/include/c++/9/bits/hashtable.h:982:7: note: ------>vectorizing SLP node starting from: D.165120[0] = 1;
/usr/include/c++/9/bits/hashtable.h:982:7: note: vect_is_simple_use: operand 1, type of def: constant
/usr/include/c++/9/bits/hashtable.h:982:7: note: vect_is_simple_use: operand 2, type of def: constant
/usr/include/c++/9/bits/hashtable.h:982:7: note: vect_is_simple_use: operand 3, type of def: constant
/usr/include/c++/9/bits/hashtable.h:982:7: note: vect_is_simple_use: operand 4, type of def: constant
/usr/include/c++/9/bits/hashtable.h:982:7: note: transform store. ncopies = 1
/usr/include/c++/9/bits/hashtable.h:982:7: note: created new init_stmt: vect_cst__231 = { 1, 2, 3, 4 };
/usr/include/c++/9/bits/hashtable.h:982:7: note: create vector_type-pointer variable to type: vector(4) int  vectorizing a pointer ref: D.165120[0]
/usr/include/c++/9/bits/hashtable.h:982:7: note: created &D.165120[0]
/usr/include/c++/9/bits/hashtable.h:982:7: note: add new stmt: MEM[(int *)&D.165120] = vect_cst__231;
/usr/include/c++/9/bits/hashtable.h:982:7: note: vectorizing stmts using SLP.
/usr/include/c++/9/bits/hashtable.h:982:7: optimized: basic block part vectorized using 16 byte vectors
/usr/include/c++/9/bits/hashtable.h:982:7: note: basic block vectorized
/usr/include/c++/9/ext/new_allocator.h:105:26: missed: not vectorized: statement can throw an exception: std::__throw_bad_alloc ();
/usr/include/c++/9/ext/new_allocator.h:114:41: missed: not vectorized: statement can throw an exception: _107 = operator new (_106);
/usr/include/c++/9/bits/hashtable_policy.h:2136:23: missed: statement clobbers memory: __builtin_memset (_107, 0, _106);
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed: not vectorized: statement can throw an exception: D.179580 = std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert.constprop (&color._M_h, __f_71);
/usr/include/c++/9/bits/hashtable.h:979:48: missed: statement clobbers memory: std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable (&color._M_h);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (prephitmp_156);
us_map.cpp:34:16: missed: not vectorized: statement can throw an exception: dfs (_93, _8);
/usr/include/c++/9/bits/hashtable.h:2029:23: missed: statement clobbers memory: __builtin_memset (_171, 0, _170);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (__n_105);
/usr/include/c++/9/ext/new_allocator.h:128:19: missed: statement clobbers memory: operator delete (_161);
/usr/include/c++/9/bits/unordered_set.h:97:11: missed: statement clobbers memory: std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable (&color._M_h);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _157 = getc (stdin.33_156);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _185 = getc (stdin.33_184);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _129 = getc (stdin.33_128);
us_map.cpp:75:23: missed: couldn't vectorize loop
us_map.cpp:75:23: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:60:31: missed: couldn't vectorize loop
us_map.cpp:60:31: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
us_map.cpp:70:28: missed: couldn't vectorize loop
us_map.cpp:70:28: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:62:27: missed: couldn't vectorize loop
us_map.cpp:39:5: missed: not vectorized: unsupported use in stmt.
us_map.cpp:59:24: missed: couldn't vectorize loop
us_map.cpp:59:24: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:51:23: missed: couldn't vectorize loop
us_map.cpp:39:5: missed: not vectorized: unsupported use in stmt.
us_map.cpp:43:23: missed: couldn't vectorize loop
us_map.cpp:43:23: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
us_map.cpp:13:26: missed: couldn't vectorize loop
us_map.cpp:13:26: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:9:12: missed: couldn't vectorize loop
us_map.cpp:9:12: missed: not vectorized: control flow in loop.
us_map.cpp:13:26: missed: couldn't vectorize loop
us_map.cpp:13:26: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:9:12: missed: couldn't vectorize loop
us_map.cpp:9:12: missed: not vectorized: control flow in loop.
us_map.cpp:42:23: missed: couldn't vectorize loop
us_map.cpp:42:23: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
us_map.cpp:13:26: missed: couldn't vectorize loop
us_map.cpp:13:26: missed: not vectorized: number of iterations cannot be computed.
us_map.cpp:9:12: missed: couldn't vectorize loop
us_map.cpp:9:12: missed: not vectorized: control flow in loop.
us_map.cpp:39:5: note: vectorized 0 loops in function.
us_map.cpp:59:24: missed: failed: evolution of base is not affine.
us_map.cpp:59:41: missed: failed: evolution of offset is not affine.
us_map.cpp:59:42: missed: failed: evolution of offset is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:299:16: missed: failed: evolution of base is not affine.
us_map.cpp:70:28: missed: failed: evolution of base is not affine.
us_map.cpp:70:45: missed: failed: evolution of offset is not affine.
us_map.cpp:70:46: missed: failed: evolution of offset is not affine.
/usr/include/c++/9/bits/hashtable_policy.h:299:16: missed: failed: evolution of base is not affine.
us_map.cpp:75:47: missed: statement clobbers memory: _88 = std::basic_ostream<char>::operator<< (&cout, i_264);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _142 = getc (stdin.33_141);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _129 = getc (stdin.33_128);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _170 = getc (stdin.33_169);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _157 = getc (stdin.33_156);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _198 = getc (stdin.33_197);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _185 = getc (stdin.33_184);
us_map.cpp:76:17: missed: statement clobbers memory: saved_stack.32_44 = __builtin_stack_save ();
us_map.cpp:40:17: missed: statement clobbers memory: _46 = read ();
us_map.cpp:41:17: missed: statement clobbers memory: _49 = read ();
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _123 = getc (stdin.33_122);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _129 = getc (stdin.33_128);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _142 = getc (stdin.33_141);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _179 = getc (stdin.33_178);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _185 = getc (stdin.33_184);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _198 = getc (stdin.33_197);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _151 = getc (stdin.33_150);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _157 = getc (stdin.33_156);
/usr/include/x86_64-linux-gnu/bits/stdio.h:49:15: missed: statement clobbers memory: _170 = getc (stdin.33_169);
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed: statement clobbers memory: D.179365 = std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert.constprop (_70, &e);
/usr/include/c++/9/bits/hashtable_policy.h:824:55: missed: statement clobbers memory: D.179371 = std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert.constprop (_69, &u);
us_map.cpp:48:9: missed: statement clobbers memory: neigbors_cnt.21_65 = __builtin_alloca_with_align (_63, 32);
us_map.cpp:48:30: missed: statement clobbers memory: done.23_67 = __builtin_alloca_with_align (_63, 32);
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:33: missed: statement clobbers memory: __builtin_memset (neigbors_cnt.21_65, 0, _63);
/usr/include/x86_64-linux-gnu/bits/string_fortified.h:71:33: missed: statement clobbers memory: __builtin_memset (done.23_67, 0, _63);
/usr/include/c++/9/ostream:570:18: missed: statement clobbers memory: std::__ostream_insert<char, std::char_traits<char> > (&cout, "done reading", 12);
/usr/include/c++/9/ostream:113:13: missed: statement clobbers memory: std::endl<char, std::char_traits<char> > (&cout);
us_map.cpp:73:8: missed: statement clobbers memory: dfs (0, 0);
/usr/include/c++/9/ostream:570:18: missed: statement clobbers memory: std::__ostream_insert<char, std::char_traits<char> > (&cout, "Res = ", 6);
us_map.cpp:74:25: missed: statement clobbers memory: _86 = std::basic_ostream<char>::operator<< (&cout, res.30_27);
/usr/include/c++/9/ostream:113:13: missed: statement clobbers memory: std::endl<char, std::char_traits<char> > (_86);
us_map.cpp:75:47: missed: statement clobbers memory: _88 = std::basic_ostream<char>::operator<< (&cout, i_264);
/usr/include/c++/9/ostream:570:18: missed: statement clobbers memory: std::__ostream_insert<char, std::char_traits<char> > (_88, "=", 1);
us_map.cpp:75:66: missed: statement clobbers memory: _90 = std::basic_ostream<char>::operator<< (_88, _29);
/usr/include/c++/9/ostream:570:18: missed: statement clobbers memory: std::__ostream_insert<char, std::char_traits<char> > (_90, " ", 1);
/usr/include/c++/9/ostream:113:13: missed: statement clobbers memory: std::endl<char, std::char_traits<char> > (&cout);
us_map.cpp:39:5: missed: statement clobbers memory: __builtin_stack_restore (saved_stack.32_44);
us_map.cpp:21:12: missed: couldn't vectorize loop
/usr/include/c++/9/bits/hashtable_policy.h:218:41: missed: not vectorized: compilation time alias: MEM[(struct _Hashtable *)_26]._M_buckets = _5;
MEM[(struct _Hash_node_base *)_26 + 16B]._M_nxt = 0B;
us_map.cpp:77:1: note: vectorized 0 loops in function.
/usr/include/c++/9/iostream:74:25: missed: statement clobbers memory: std::ios_base::Init::Init (&__ioinit);
/usr/include/c++/9/iostream:74:25: missed: statement clobbers memory: __cxa_atexit (__dt_comp , &__ioinit, &__dso_handle);
us_map.cpp:21:7: missed: statement clobbers memory: __cxa_atexit (__tcf_0, 0B, &__dso_handle);
